include:
  - compose/coreai-mcu-frontend.yaml
  - compose/coreai-mcu-documents.yaml
  - compose/coreai-mcu-generation-oai.yaml
  - compose/coreai-mcu-knowledge-pgv.yaml
  - compose/coreai-mcu-responses.yaml
  - compose/coreai-mcu-event.yaml
  - compose/coreai-mcu-prompts.yaml
  - compose/coreai-mcu-personas.yaml
  - compose/coreai-mcu-local-setup.yaml
services:
  coreai-mcu-postgres:
    build:
      context: .
      dockerfile: ./pgvector.Dockerfile
    image: coreai-mcu-pg
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ppp
      POSTGRES_USERNAME: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-postgres} -d postgres"]
      interval: 5s
      retries: 10
      timeout: 5s
    networks:
      - coreai-mcu
    volumes:
      - postgres_data:/var/lib/postgresql/data

  coreai-mcu-azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10002:10002"
    networks:
      - coreai-mcu
    volumes:
      - azurite_data:/data

  langfuse:
    image: langfuse/langfuse:2
    profiles:
      - langfuse
    ports:
      - "4000:3000"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-ppp}@${POSTGRES_HOST:-host.docker.internal}:${POSTGRES_PORT:-5432}/langfuse"
      DATABASE_NAME: langfuse
      NEXTAUTH_URL: http://localhost:4000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      SALT: ${LANGFUSE_SALT}

networks:
  coreai-mcu:
    name: coreai-mcu
    driver: bridge

volumes:
  azurite_data:
  postgres_data:
